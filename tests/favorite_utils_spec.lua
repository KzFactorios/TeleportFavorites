-- tests/favorite_utils_spec.lua
-- Tests for core.favorite.favorite (FavoriteUtils)

local FavoriteUtils = require("core.favorite.favorite")
local Constants = require("constants")
local CollectionUtils = require("core.utils.collection_utils")

describe("FavoriteUtils", function()
  it("should create a blank favorite", function()
    local fav = FavoriteUtils.get_blank_favorite()
    assert.is_table(fav)
    assert.equals(fav.gps, Constants.settings.BLANK_GPS)
    assert.is_false(fav.locked)
    assert.is_nil(fav.tag)
  end)

  it("should toggle locked state", function()
    local fav = FavoriteUtils.new("gps", false)
    assert.is_false(fav.locked)
    FavoriteUtils.toggle_locked(fav)
    assert.is_true(fav.locked)
    FavoriteUtils.toggle_locked(fav)
    assert.is_false(fav.locked)
  end)

  it("should update properties", function()
    local fav = FavoriteUtils.new("gps", false)
    FavoriteUtils.update_property(fav, "gps", "newgps")
    assert.equals(fav.gps, "newgps")
    FavoriteUtils.update_property(fav, "locked", true)
    assert.is_true(fav.locked)
    FavoriteUtils.update_property(fav, "tag", {text = "t"})
    assert.same(fav.tag, {text = "t"})
  end)

  it("should copy favorites deeply", function()
    local fav = FavoriteUtils.new("gps", true, {text = "t", nested = {a = 1}})
    local copy = FavoriteUtils.copy(fav)
    assert.not_equals(fav, copy)
    assert.equals(copy.gps, fav.gps)
    assert.equals(copy.locked, fav.locked)
    assert.same(copy.tag, fav.tag)
    copy.tag.nested.a = 2
    assert.not_equals(fav.tag.nested.a, copy.tag.nested.a)
  end)

  it("should check equality", function()
    local a = FavoriteUtils.new("gps", true, {text = "t"})
    local b = FavoriteUtils.new("gps", true, {text = "t"})
    assert.is_true(FavoriteUtils.equals(a, b))
    b.gps = "other"
    assert.is_false(FavoriteUtils.equals(a, b))
  end)

  it("should check blank, valid, locked, empty states", function()
    local blank = FavoriteUtils.get_blank_favorite()
    assert.is_true(FavoriteUtils.is_blank_favorite(blank))
    assert.is_true(FavoriteUtils.check_state(blank, "blank"))
    assert.is_false(FavoriteUtils.check_state(blank, "valid"))
    assert.is_false(FavoriteUtils.check_state(blank, "locked"))
    assert.is_false(FavoriteUtils.check_state(blank, "empty"))
    local fav = FavoriteUtils.new("gps", true)
    assert.is_true(FavoriteUtils.check_state(fav, "valid"))
    assert.is_true(FavoriteUtils.check_state(fav, "locked"))
  end)
end)
