---@diagnostic disable: undefined-global
--[[
Tiny Utilities - Consolidated very small utility functions for TeleportFavorites mod

This module consolidates only the smallest utility modules to reduce file count
without creating complexity:

Consolidated modules:
- Version information (from version.lua) - 1 line
- Rich text formatting (from rich_text_formatter.lua) - 23 lines 

This keeps the consolidation simple and focused on reducing file count
rather than trying to merge complex functionality.
]]

local LocaleUtils = require("core.utils.locale_utils")
local GPSUtils = require("core.utils.gps_utils")

local TinyUtils = {}

-- ========================================
-- VERSION UTILITIES (from version.lua)
-- ========================================

-- This value is auto-generated by update_version.py
TinyUtils.VERSION = "0.0.125"

-- ========================================
-- RICH TEXT FORMATTER (from rich_text_formatter.lua)
-- ========================================

---Format a position change notification for the player
---@param player LuaPlayer The player object
---@param chart_tag table The chart tag that was moved
---@param old_position MapPosition The old position
---@param new_position MapPosition The new position  
---@return string formatted notification string
function TinyUtils.format_position_change_notification(player, chart_tag, old_position, new_position)
  if not player or not chart_tag or not old_position or not new_position then
    return ""
  end

  local surface_index = tonumber(player.surface.index) or 1
  local old_gps = GPSUtils.gps_from_map_position(old_position, surface_index)
  local new_gps = GPSUtils.gps_from_map_position(new_position, surface_index)
  
  return LocaleUtils.get_gui_string(player, "tag_moved", {
    text = chart_tag.text or "",
    old_gps = old_gps,
    new_gps = new_gps
  })
end

---Format a tag relocation message
---@param player LuaPlayer The player object
---@param tag_text string The tag text
---@param gps_string string The GPS coordinates
---@return string formatted message
function TinyUtils.format_tag_relocation_message(player, tag_text, gps_string)
  if not player or not tag_text or not gps_string then
    return ""
  end

  return LocaleUtils.get_gui_string(player, "tag_relocated", {
    text = tag_text,
    gps = gps_string
  })
end

---Format a tag deletion prevention message
---@param chart_tag table The chart tag that would have been deleted
---@return string formatted message
function TinyUtils.format_tag_deletion_prevention_message(chart_tag)
  if not chart_tag then 
    return ""
  end

  return string.format("[color=red]Tag '%s' could not be relocated and was preserved at its current location[/color]",
    chart_tag.text or "Unknown Tag"
  )
end

return TinyUtils
